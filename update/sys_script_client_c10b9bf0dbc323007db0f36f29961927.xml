<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Only display What needed choices that match the Request type value.</description>
        <field>u_request_type</field>
        <global>true</global>
        <messages/>
        <name>NeedIt Request Type Options</name>
        <order/>
        <script><![CDATA[/*******************************************************************************
* Tutorial Version
*******************************************************************************/
/*function onChange(control, oldValue, newValue, isLoading, isTemplate) {
		if ( newValue == '') {
			return;
		}

		var whatneeded = g_form.getValue('u_what_needed');

		// Clear all of the choices from the What needed field choice list
		g_form.clearOptions('u_what_needed');

		// If the the value of the Request type field is hr, add
		// two hr choices and other to the What needed field choice list
		if(newValue == 'hr'){
			g_form.addOption('u_what_needed','hr1','Human Resources 1');
			g_form.addOption('u_what_needed','hr2','Human Resources 2');
			g_form.addOption('u_what_needed','other','Other');
		}
		// If the the value of the Request type field is facilities, add
		// two facilities choices and other to the What needed field
		// choice list
		if(newValue == 'facilities'){
			g_form.addOption('u_what_needed','facilities1','Facilities 1');
			g_form.addOption('u_what_needed','facilities2','Facilities 2');
			g_form.addOption('u_what_needed','other','Other');
		}
		// If the the value of the Request type field is legal, add
		// two legal choices and other to the What needed field
		// choice list
		if(newValue == 'legal'){
			g_form.addOption('u_what_needed','legal1','Legal 1');
			g_form.addOption('u_what_needed','legal2','Legal 2');
			g_form.addOption('u_what_needed','other','Other');
		}

		// If the form is loading and it is not a new record, set the u_what_needed value to the
		// value from the record before it was loaded
		if(isLoading && !g_form.isNewRecord()){
			g_form.setValue('u_what_needed', whatneeded);
		}
	}*/


/*******************************************************************************
* Version 1
*******************************************************************************/
/*function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if ( newValue == '') {
      return;
   }
	
   var whatNeeded = g_form.getValue('u_what_needed');
   var i = 0;
	
   // clear all of the choices from the what needed field choices list
   g_form.clearOptions('u_what_needed');

   // If the value of the Request type field is hr, add
   // two hr choices and other to the what needed field choice list
   if(newValue == 'hr'){
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'hr' + i, 'Human Resources ' + i);
		   }
	   }
   }

   // If the value of the Request type field is facilities, add
   // two facilities choices and other to the What needed field
   // choice list
   if(newValue == 'facilities'){
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'facilities' + i, 'Facilities ' + i);
		   }
	   }
   }

   // if the value of the Request type field is legal, add
   // two legal choices and other to the What needed field
   // choice list
   if(newValue == 'legal'){
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'legal' + i, 'Legal ' + i);
		   }
	   }
   }
   
   // if the value of the Request type field is legal, add
   // two legal choices and other to the What needed field
   // choice list
   if(newValue == 'IT'){
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'IT' + i, 'IT ' + i);
		   }
	   }
   }

   //If the form is loading and it is not a new record, set the u_what_needed value to the
   // value from the record before it was loaded
   if(isLoading && !g_form.isNewRecord()){
	   g_form.setValue('u_what_needed', whatNeeded);
   }
}*/


/*******************************************************************************
* Version 2
*******************************************************************************/
/*function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if ( newValue == '') {
      return;
   }
	
   var whatNeeded = g_form.getValue('u_what_needed');
   var i = 0;
	
   // clear all of the choices from the what needed field choices list
   g_form.clearOptions('u_what_needed');

   // If the value of the Request type field is hr, add
   // two hr choices and other to the what needed field choice list
   if(newValue == 'hr'){
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'hr' + i, 'Human Resources ' + i);
		   }
	   }
   } else if(newValue == 'facilities') {
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'facilities' + i, 'Facilities ' + i);
		   }
	   }
   } else if(newValue =="legal") {
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'legal' + i, 'Legal ' + i);
		   }
	   }
   } else {
	   for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'IT' + i, 'IT ' + i);
		   }
	   }
   }

   //If the form is loading and it is not a new record, set the u_what_needed value to the
   // value from the record before it was loaded
   if(isLoading && !g_form.isNewRecord()){
	   g_form.setValue('u_what_needed', whatNeeded);
   }
}*/


/*******************************************************************************
* Version 3
*******************************************************************************/
/*function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if ( newValue == '') {
      return;
   }
	
	 var myString = 'u_what_needed';
   var whatNeeded = g_form.getValue('u_what_needed');
   var i = 0;
	
   // clear all of the choices from the what needed field choices list
   g_form.clearOptions('u_what_needed');

   switch(newValue){
	   case 'hr':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption('u_what_needed', 'other', 'Other');
			   } else {
				   g_form.addOption('u_what_needed', 'hr' + i, 'Human Resources ' + i);
			   }
		   }
		   break;
	   case 'facilities':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption('u_what_needed', 'other', 'Other');
			   } else {
				   g_form.addOption('u_what_needed', 'facilities' + i, 'Facilities ' + i);
			   }
		   }
		   break;
	   case 'legal':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption('u_what_needed', 'other', 'Other');
			   } else {
				   g_form.addOption('u_what_needed', 'legal' + i, 'Legal ' + i);
			   }
		   }
		   break;
	   default:
		    for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption('u_what_needed', 'other', 'Other');
		   } else {
			   g_form.addOption('u_what_needed', 'IT' + i, 'IT ' + i);
		   }
	   }	   
   }

   //If the form is loading and it is not a new record, set the u_what_needed value to the
   // value from the record before it was loaded
   if(isLoading && !g_form.isNewRecord()){
	   g_form.setValue('u_what_needed', whatNeeded);
   }
}*/


/*******************************************************************************
* Version 4
*******************************************************************************/
/*function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if ( newValue == '') {
      return;
   }
	
   var field = 'u_what_needed';
   var whatNeeded = g_form.getValue(field);
   var i = 0;
	
   // clear all of the choices from the what needed field choices list
   g_form.clearOptions(field);

   switch(newValue){
	   case 'hr':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption(field, 'other', 'Other');
			   } else {
				   g_form.addOption(field, 'hr' + i, 'Human Resources ' + i);
			   }
		   }
		   break;
	   case 'facilities':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption(field, 'other', 'Other');
			   } else {
				   g_form.addOption(field, 'facilities' + i, 'Facilities ' + i);
			   }
		   }
		   break;
	   case 'legal':
		   for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption(field, 'other', 'Other');
			   } else {
				   g_form.addOption(field, 'legal' + i, 'Legal ' + i);
			   }
		   }
		   break;
	   default:
		    for(i = 1; i <= 3; i++){
		   if(i === 3){
			   g_form.addOption(field, 'other', 'Other');
		   } else {
			   g_form.addOption(field, 'IT' + i, 'IT ' + i);
		   }
	   }	   
   }

   //If the form is loading and it is not a new record, set the u_what_needed value to the
   // value from the record before it was loaded
   if(isLoading && !g_form.isNewRecord()){
	   g_form.setValue(field, whatNeeded);
   }
}*/



/*******************************************************************************
* Version 5
*******************************************************************************/
/***************************************************************
* variable definitions
***************************************************************/
var field = 'u_what_needed';
var whatNeeded = g_form.getValue(field);
var i = 0;

/***************************************************************
* This function returns the office title
***************************************************************/
function getOffice(office) {
	switch(office) {
		case 'hr':
			return 'Human Resources';
		case 'facilities':
			return 'Facilities';
		case 'legal':
			return 'Legal';
		default:
			return 'Information Technology';
	}
}

/***************************************************************
* This function dynamically creates the list.
***************************************************************/
function getList(office) {
	var title = getOffice(office);
	for(i = 1; i <= 3; i++){
			   if(i === 3){
				   g_form.addOption(field, 'other', 'Other');
			   } else {
				   g_form.addOption(field, office + i, title + ' ' + i);
			   }
		   }
}

/***************************************************************
* This function is the driver for when there is a change.
***************************************************************/
function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if ( newValue == '') {
      return;
   }
	
   // clear all of the choices from the what needed field choices list
   g_form.clearOptions(field);

   switch(newValue){
	   case 'hr':
		   getList(newValue);
		   break;
	   case 'facilities':
		   getList(newValue);
		   break;
	   case 'legal':
		   getList(newValue);
		   break;
	   default:
		    getList(newValue);	   
   }

   //If the form is loading and it is not a new record, set the u_what_needed value to the
   // value from the record before it was loaded
   if(isLoading && !g_form.isNewRecord()){
	   g_form.setValue(field, whatNeeded);
   }
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-01-14 21:51:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c10b9bf0dbc323007db0f36f29961927</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>NeedIt Request Type Options</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_client_c10b9bf0dbc323007db0f36f29961927</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-01-15 15:48:13</sys_updated_on>
        <table>x_58872_needit_needit</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
